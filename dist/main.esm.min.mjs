var e=e=>{const r=[],n={};Array.prototype.forEach.call(e,(e,t)=>{n[String(t)]=1,r.push(t)});let t=0,a=Object.keys(e).filter(e=>!n[e]).concat(Object.getOwnPropertySymbols(e).filter(e=>{const r=String(e).match(/^Symbol\(Symbol\.([^\)]*)\)$/);return null===r||2!==r.length||Symbol[r[1]]!==e}));return r.concat(a).reduce((r,n)=>(n===t?(t+=1,r.e.push(e[n])):r.n.push([n,e[n]]),r),{e:[],n:[]})},r=e=>({t:e.substring(0,2),a:parseInt(e.substring(2),10)}),n=e=>R[e]&&!R[e].o,t={EvalError:EvalError,RangeError:RangeError,ReferenceError:ReferenceError,SyntaxError:SyntaxError,TypeError:TypeError,URIError:URIError};const a=(e,r)=>r.u,o=(e,r)=>[r.e.map(r=>E(e,r))],u=(e,r)=>(r.e=Array.from(new Uint8Array(r.u)),o(e,r)),c=(e,r)=>{r.c[0].forEach((n,t)=>{r.u[t]=y(e,n)}),d(e,r)},i=(e,r)=>[E(e,r.u.valueOf())],l=(e,r,n)=>{n.forEach(n=>{r.u[y(e,n[0])]=y(e,n[1])})},d=(e,r)=>{l(e,r,r.c.slice(1))},s=(e,t)=>{if(n(t))return R[t].i();const a=r(t);return R[a.t].l(e,a.t,a.a)},y=(e,t)=>{if(n(t))return R[t].i();const a=r(t);return R[a.t]?e.d[t].u:t},f=e=>(r,n,t)=>new e(s(r,r.s[n][t][0])),m=e=>(r,n,t)=>{const a=r.s[n][t][0],o=new e(a.length),u=new Uint8Array(o);return a.forEach((e,n)=>{u[n]=s(r,e)}),o},b=e=>(r,n,t)=>new e(r.s[n][t][0].length),g=e=>(r,n)=>[[void 0].concat(e.map(e=>E(r,n.u[e])))],A=(e,n,t)=>{const a=new FileReader;a.addEventListener("loadend",()=>{const o=new Uint8Array(a.result),u=E(e,o),c=r(u);e[c.t][c.a]=[Array.from(o).map(n=>{const t=E(e,n),a=r(t);return void 0===e[a.t][a.a]&&(e[a.t][a.a]=n),t})],e[n.t][n.a][0][0]=u,t()}),a.readAsArrayBuffer(n.u)},R={un:{i:()=>{}},nl:{i:()=>null},na:{i:()=>NaN},nI:{i:()=>-1/0},pI:{i:()=>1/0},n0:{i:()=>-0},bt:{i:()=>!0},bf:{i:()=>!1},nm:{y:"Number",o:a,l:(e,r,n)=>e.s[r][n],i:a},st:{y:"String",o:a,l:(e,r,n)=>e.s[r][n],i:a},sy:{y:"Symbol",o:(e,r)=>{const n=Symbol.keyFor(r.u),t=void 0!==n;return[E(e,t?1:0),E(e,t?n:String(r.u).replace(/^Symbol\(|\)$/g,""))]},l:(e,r,n)=>{const t=e.s[r][n],a=s(e,t[0]),o=s(e,t[1]);return 1===a?Symbol.for(o):Symbol(o)},i:a},ar:{y:"Array",o:o,l:()=>[],i:c},ag:{y:"Arguments",o:o,l:(e,r,n)=>(function(){return arguments}).apply(null,Array.from({length:e.s[r][n][0].length},()=>{})),i:c},ob:{y:"Object",o:()=>[],l:()=>({}),i:(e,r)=>{l(e,r,r.c)}},BO:{f:1,o:i,l:f(Boolean),i:d},NM:{o:i,l:f(Number),i:d},ST:{o:i,l:f(String),i:d},da:{y:"Date",o:(e,r)=>[E(e,r.u.getTime())],l:f(Date),i:d},re:{y:"RegExp",o:(e,r)=>[[E(e,r.u.source),E(e,r.u.flags),E(e,r.u.lastIndex)]],l:(e,r,n)=>{const t=e.s[r][n][0],a=new RegExp(s(e,t[0]),s(e,t[1]));return a.lastIndex=s(e,t[2]),a},i:d},er:{y:"Error",o:(e,r)=>[[E(e,t[r.u.name]?r.u.name:"Error"),E(e,r.u.message),E(e,r.u.stack)]],l:(e,r,n)=>{const a=e.s[r][n][0],o=new(t[s(e,a[0])]||Error)(s(e,a[1]));return o.stack=s(e,a[2]),o},i:d},AB:{y:"ArrayBuffer",o:u,l:m(ArrayBuffer),i:d},SA:{y:"SharedArrayBuffer",o:u,l:m(SharedArrayBuffer),i:d},I1:{y:"Int8Array",o:o,l:b(Int8Array),i:c},U1:{y:"Uint8Array",o:o,l:b(Uint8Array),i:c},C1:{y:"Uint8ClampedArray",o:o,l:b(Uint8ClampedArray),i:c},U2:{y:"Uint16Array",o:o,l:b(Uint16Array),i:c},I2:{y:"Int16Array",o:o,l:b(Int16Array),i:c},I3:{y:"Int32Array",o:o,l:b(Int32Array),i:c},U3:{y:"Uint32Array",o:o,l:b(Uint32Array),i:c},F3:{y:"Float32Array",o:o,l:b(Float32Array),i:c},F4:{y:"Float64Array",o:o,l:b(Float64Array),i:c},Se:{y:"Set",o:(e,r)=>[Array.from(r.u).map(r=>E(e,r))],l:()=>new Set,i:(e,r)=>{r.c[0].forEach(n=>{r.u.add(y(e,n))}),d(e,r)}},Ma:{y:"Map",o:(e,r)=>[Array.from(r.u).map(r=>[E(e,r[0]),E(e,r[1])])],l:()=>new Map,i:(e,r)=>{r.c[0].forEach(n=>{r.u.set(y(e,n[0]),y(e,n[1]))}),d(e,r)}},Bl:{y:"Blob",o:g(["type"]),m:A,l:(e,n,t)=>{const a=e.s[n][t][0],o=r(a[0]);return new Blob([new Uint8Array(e.s[o.t][o.a][0].map(r=>s(e,r)))],{type:s(e,a[1])})},i:d},Fi:{y:"File",o:g(["name","type","lastModified"]),m:A,l:(e,n,t)=>{const a=e.s[n][t][0],o=r(a[0]);return new File([new Uint8Array(e.s[o.t][o.a][0].map(r=>s(e,r)))],s(e,a[1]),{type:s(e,a[2]),lastModified:s(e,a[3])})},i:d}},p=e=>{try{console.log(e)}catch(e){}},N={Boolean:"BO",Number:"NM",String:"ST"};var V=e=>{if(void 0===e)return"un";if(null===e)return"nl";if(!0===e)return"bt";if(!1===e)return"bf";if("number"==typeof e){if(e===1/0)return"pI";if(e===-1/0)return"nI";if(e!=e)return"na";if(-0===e&&1/e==-1/0)return"n0"}const r=Object.prototype.toString.call(e).replace(/\[object |\]/g,"");if("object"==typeof e){const e=N[r];if(e)return e}const n=Object.keys(R).find(e=>{if(r===R[e].y)return e});return n||(p(`Unsupported type "${r}". Value reference replaced with empty object:`),p(e),"ob")};const S=(e,r)=>{void 0!==e._.b.get(r)||n(V(r))||e._.g.push(r)};var E=(r,t)=>{const a=V(t);if(n(a))return a;const o=r._.b.get(t);if(void 0!==o)return o.A;r[a]=r[a]||[],r[a].push(void 0);const u=r[a].length-1,c={t:a,a:u,A:a+u,u:t,e:[],n:[]};r._.b.set(t,c),R[a].m&&r._.R.push(c);let{e:i,n:l}=e(t);return R[a].f&&(i=[]),c.e=i,c.n=l,i.forEach(e=>{S(r,e)}),l.forEach(e=>{S(r,e[0]),S(r,e[1])}),c.A};const w=(e,r,n)=>{delete e._,e.r=n,e.v="1.0.0";const t=Object.keys(e).map(r=>[r,e[r]]);if("function"!=typeof r)return t;r(t)};var U=(e,r)=>{const t={_:{b:new Map,g:[],R:[]}},a=V(e);if(n(a))return w(t,r,a);for(t._.g.push(e);t._.g.length;)E(t,t._.g.shift());if(t._.b.forEach(e=>{t[e.t][e.a]=R[e.t].o(t,e),e.n.length>0&&(t[e.t][e.a]=t[e.t][e.a].concat(e.n.map(e=>[E(t,e[0]),E(t,e[1])])))}),0===t._.R.length)return w(t,r,t._.b.get(e).A);if("function"!=typeof r)throw"Callback function required when encoding deferred objects such as File and Blob.";let o=t._.R.length;const u=()=>{if(0===(o-=1))return w(t,r,t._.b.get(e).A)};t._.R.forEach(e=>{R[e.t].m(t,e,u)})};const v=(e,r)=>{"ar"===V(r)?r.forEach(r=>{v(e,r)}):e.g.push(r)},I=(e,t)=>{const a=r(t);if(!R[a.t]||void 0!==e.d[t]||n(a.t))return;const o={t:a.t,a:a.a,A:t,u:void 0,c:[]};e.d[t]=o,o.u=R[a.t].l(e,o.t,o.a),o.c=e.s[o.t][o.a],"ar"===V(o.c)&&v(e,o.c)};var B=e=>{const t={s:e.reduce((e,r)=>(e[r[0]]=r[1],e),{}),d:{},g:[]},a=r(t.s.r);if(!R[a.t])return t.s.r;if(n(a.t))return R[a.t].i();for(t.g.push(t.s.r);t.g.length;)I(t,t.g.shift());return Object.values(t.d).forEach(e=>{R[e.t].i(t,e)}),t.d[t.s.r].u},h={encode:U,decode:B};export default h;